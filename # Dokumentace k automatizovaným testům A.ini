# Dokumentace k automatizovaným testům API

## Popis
Tato sada testů automatizuje ověřování API pro správu měření nečistot v barelech s použitým kuchyňským olejem (UCO). Testy ověřují klíčové funkcionality API a zahrnují i negativní scénáře.

## Požadavky
- Python 3.10+
- Knihovna `pytest`
- Knihovna `requests`

### Instalace závislostí
Spustíte následující příkaz:
 "pip install pytest requests"

## Jak spustit testy
Spuštění všech testů:"pytest test.py"

Podrobný výstup:"pytest -v test.py"


Spuštění konkrétního testu:"pytest -v test.py::test_create_barrel"


## Testované scénáře

### 1. Pozitivní testy

#### `test_create_barrel()`
✅ Ověřuje, že lze vytvořit nový barel s platnými daty.
- **Očekávaný výstup:** HTTP 201 a odpověď obsahuje `id` nově vytvořeného barelu.

#### `test_get_barrels()`
✅ Ověřuje, že lze získat seznam všech barelů.
- **Očekávaný výstup:** HTTP 200 a odpověď obsahuje seznam barelů.

#### `test_add_measurement(create_barrel)`
✅ Ověřuje, že lze přidat měření nečistot k existujícímu barelu.
- **Očekávaný výstup:** HTTP 201.

#### `test_get_measurements()`
✅ Ověřuje, že lze získat seznam všech měření.
- **Očekávaný výstup:** HTTP 200 a odpověď obsahuje seznam měření.

#### `test_get_barrel_details(create_barrel)`
✅ Ověřuje, že lze získat detail konkrétního barelu podle jeho ID.
- **Očekávaný výstup:** HTTP 200.

#### `test_delete_barrel(create_barrel)`
✅ Ověřuje, že lze smazat existující barel.
- **Očekávaný výstup:** HTTP 204.

### 2. Negativní testy

#### `test_create_barrel_negative()`
❌ Ověřuje, že API odmítne vytvoření barelu s nevalidními daty.
- **Očekávaný výstup:** HTTP 400.

#### `test_get_barrels_negative()`
❌ Ověřuje, že API odmítne GET požadavek na neexistující endpoint (`/random`).
- **Očekávaný výstup:** HTTP 404.

## Možná vylepšení
- **Přidat autentizaci**, pokud API vyžaduje přihlašování.

## Závěr
Tato sada testů pokrývá základní operace API a zahrnuje i negativní testování. Pro správné fungování API je nutné dodržovat požadovaný formát JSON požadavků.

